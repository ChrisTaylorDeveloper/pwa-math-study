{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-another-post-index-mdx-948854762e44581f44d8.js","mappings":"kOAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,KAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,4DAClD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,KAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,4BCNA,MAAMU,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAASF,EAChC,MAAMG,GAAQC,EAAAA,EAAAA,GAASH,EAAKI,IAAIC,YAAYC,YAC5C,OAAOX,EAAAA,cAAoBY,EAAAA,EAAQ,CACjCC,UAAWR,EAAKI,IAAIC,YAAYI,OAC/Bd,EAAAA,cAAoB,IAAK,KAAM,WAAYK,EAAKI,IAAIC,YAAYK,MAAOf,EAAAA,cAAoBgB,EAAAA,EAAa,CACzGT,MAAOA,EACPU,IAAKZ,EAAKI,IAAIC,YAAYQ,iBACxBlB,EAAAA,cAAoB,IAAK,KAAM,gBAAiB,IAAKA,EAAAA,cAAoB,IAAK,CAChFmB,KAAMd,EAAKI,IAAIC,YAAYU,wBAC1Bf,EAAKI,IAAIC,YAAYW,yBAA0Bf,EAAS,EAoBhDgB,EAAOC,IAAA,IAAC,KAAClB,GAAKkB,EAAA,OAAKvB,EAAAA,cAAoBwB,EAAAA,EAAK,CACvDV,MAAOT,EAAKI,IAAIC,YAAYI,OAC5B,EAEa,SAASW,EAAiBhC,GACvC,OAAOO,EAAAA,cAAoBG,EAAUV,EAAOO,EAAAA,cAAoB0B,EAAqBjC,GACvF,C,qECdA,MAAMkC,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiB9B,GAC/B,MAAM+B,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAf7B,EACFA,EAAW+B,GAGb,IAAIA,KAAsB/B,EACnC,GACA,CAAC+B,EAAmB/B,GAExB,C","sources":["webpack://gatsby-starter-default/./blog/another-post/index.mdx","webpack://gatsby-starter-default/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://gatsby-starter-default/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Here's another post! It's even better than the first one!\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/chris/act/repos/pwa-math-study/blog/another-post/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, \"Posted: \", data.mdx.frontmatter.date), React.createElement(GatsbyImage, {\n    image: image,\n    alt: data.mdx.frontmatter.hero_image_alt\n  }), React.createElement(\"p\", null, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    href: data.mdx.frontmatter.hero_image_credit_link\n  }, data.mdx.frontmatter.hero_image_credit_text)), children);\n};\nexport const query = graphql`\n  query($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} props\n *   Props.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(props) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (props.disableParentContext) {\n    allComponents =\n      typeof props.components === 'function'\n        ? props.components(emptyComponents)\n        : props.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(props.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    props.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","image","getImage","mdx","frontmatter","hero_image","Layout","pageTitle","title","date","GatsbyImage","alt","hero_image_alt","href","hero_image_credit_link","hero_image_credit_text","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}